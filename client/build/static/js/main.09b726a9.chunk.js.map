{"version":3,"sources":["assets/spinner.gif","components/Jumbotron/index.js","utils/mutations.js","utils/helpers.js","pages/Success.js","components/ProductItem/index.js","utils/actions.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","utils/reducers.js","utils/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Jumbotron","children","style","height","clear","paddingTop","textAlign","LOGIN","gql","ADD_ORDER","ADD_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","Success","useMutation","addOrder","useEffect","a","cart","products","map","item","length","variables","data","forEach","setTimeout","location","assign","saveOrder","ProductItem","state","useSelector","dispatch","useDispatch","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","currentCategory","useQuery","loading","then","filter","category","key","spinner","CategoryMenu","categories","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","removeItem","Cart","stripePromise","loadStripe","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","NoMatch","Login","props","email","password","formState","setFormState","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","defaultState","reducer","action","newState","createStore","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.09b726a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      } \r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\r\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map(item => item._id);\r\n      \r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n    \r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n        \r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>\r\n          Thank you for your purchase!\r\n        </h2>\r\n        <h2>\r\n          You will now be redirected to the home page\r\n        </h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\n// import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\"\r\n\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\nfunction ProductItem(item) {\r\n\r\n  const state = useSelector ((state) => {\r\n    return state;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const [state, dispatch] = useStoreContext();\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import gql from 'graphql-tag';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n{\r\n  categories {\r\n    _id\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n{\r\n  user {\r\n    firstName\r\n    lastName\r\n    orders {\r\n      _id\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, { useEffect } from \"react\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport ProductItem from \"../ProductItem\";\r\n// import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\nfunction ProductList() {\r\n\r\n  const state = useSelector ((state) => {\r\n    return state;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const [state, dispatch] = useStoreContext();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if(data) {\r\n      dispatch({\r\n           type: UPDATE_PRODUCTS,\r\n          products: data.products\r\n        });  data.products.forEach((product) => {\r\n          idbPromise('products', 'put', product);\r\n    });\r\n  } else if (!loading) {\r\n    idbPromise('products', 'get').then((products) => {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n       products: products\r\n     });\r\n    });\r\n  }\r\n}, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(product => product.category._id === currentCategory);\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n            {filterProducts().map(product => (\r\n                <ProductItem\r\n                  key= {product._id}\r\n                  _id={product._id}\r\n                  image={product.image}\r\n                  name={product.name}\r\n                  price={product.price}\r\n                  quantity={product.quantity}\r\n                />\r\n            ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      { loading ? \r\n      <img src={spinner} alt=\"loading\" />: null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n// import { useStoreContext } from '../../utils/GlobalState';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\nfunction CategoryMenu() {\r\n\r\n  const state = useSelector ((state) => {\r\n    return state;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map(item => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\n// import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CartItem = ({ item }) => {\r\n \r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\r\nimport { idbPromise } from \"../../utils/helpers\"\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\nconst Cart = () => {\r\n\r\n  const state = useSelector ((state) => {\r\n    return state;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session })\r\n      })\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    };\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach(item => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout ({\r\n      variables: { products: productIds }\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span\r\n          role=\"img\"\r\n          aria-label=\"trash\">🛒</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map(item => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {\r\n              Auth.loggedIn() ?\r\n                <button onClick={submitCheckout}>\r\n                  Checkout\r\n                </button>\r\n                :\r\n                <span>(log in to check out)</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      ) : (\r\n          <h3>\r\n            <span role=\"img\" aria-label=\"shocked\">\r\n              😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n          </h3>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport Cart from \"../components/Cart\";\r\n// import { useStoreContext } from \"../utils/GlobalState\";\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from \"../utils/actions\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport spinner from '../assets/spinner.gif'\r\nimport { idbPromise } from \"../utils/helpers\";\r\n\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\nfunction Detail() {\r\n  const state = useSelector ((state) => {\r\n    return state;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({})\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      setCurrentProduct(products.find(product => product._id === id));\r\n    } else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n    });\r\n  }else if (!loading) {\r\n    idbPromise('products', 'get').then((indexedProducts) => {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: indexedProducts\r\n      });\r\n    });\r\n  }\r\n}, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">\r\n            ← Back to Products\r\n          </Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>\r\n            {currentProduct.description}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>\r\n            ${currentProduct.price}\r\n            {\" \"}\r\n            <button onClick={addToCart}>\r\n              Add to Cart\r\n            </button>\r\n            <button \r\n              disabled={!cart.find(p => p._id === currentProduct._id)} \r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {\r\n        loading ? <img src={spinner} alt=\"loading\" /> : null\r\n      }\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\"\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' })\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">\r\n        ← Go to Signup\r\n      </Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {\r\n          error ? <div>\r\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\r\n          </div> : null\r\n        }\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email, password: formState.password,\r\n        firstName: formState.firstName, lastName: formState.lastName\r\n      }\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">\r\n        ← Go to Login\r\n      </Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\r\n          -Shop-Shop\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_USER } from \"../utils/queries\";\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">\r\n          ← Back to Products\r\n          </Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img\r\n                          alt={name}\r\n                          src={`/images/${image}`}\r\n                        />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n\r\n      </div>\r\n\r\n    </>)\r\n\r\n};\r\n\r\nexport default OrderHistory;\r\n","// import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n\r\n} from \"./actions\";\r\n\r\nconst defaultState = {\r\n  products: [],\r\n  cart: [],\r\n  cartOpen: false,\r\n  categories: [],\r\n  currentCategory: '',\r\n}\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n      case TOGGLE_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: !state.cartOpen\r\n        };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n// export function useProductReducer(initialState) {\r\n//   return useReducer(reducer, initialState)\r\n// }","import { createStore } from 'redux';\n\nimport reducer from '../utils/reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\nimport Success from './pages/Success'\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\n// import { StoreProvider } from \"./utils/GlobalState\";\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\nimport store from './utils/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem('id_token')\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    })\r\n  },\r\n  uri: '/graphql',\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n          </ Provider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}